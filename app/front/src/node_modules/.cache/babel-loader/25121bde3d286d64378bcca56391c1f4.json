{"ast":null,"code":"var _jsxFileName = \"/Users/camille/git/sailor/Sailor/app/front/src/Login.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { useCookies, withCookies } from 'react-cookie';\n\nfunction FormLogin(props) {\n  return React.createElement(\"form\", {\n    onSubmit: props.onSignin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Username:\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    ref: props.usernameRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Password:\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    ref: props.passwordRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    name: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"button\", {\n    type: \"button\",\n    name: \"signup\",\n    onClick: props.onSignup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Sign up\")));\n}\n\nfunction Login() {\n  const [cookies, setCookie, removeCookie] = useCookies(['login']);\n  const usernameRef = React.createRef();\n  const passwordRef = React.createRef();\n\n  function disconnect() {\n    removeCookie('login');\n  }\n\n  async function onSignup() {\n    const user = {\n      username: usernameRef.current.value,\n      password: passwordRef.current.value\n    };\n\n    try {\n      const p = await axios.post('http://localhost:8000/signup', user);\n\n      if (p.status === 201) {\n        user.token = p.data.token;\n        setCookie('login', user, '/');\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async function onSignin(e) {\n    e.preventDefault();\n    const user = {\n      username: e.target.username.value,\n      password: e.target.password.value\n    };\n\n    try {\n      const p = await axios.post('http://localhost:8000/signin', user);\n\n      if (p.status === 200) {\n        user.token = p.data.token;\n        setCookie('login', user, '/');\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  if (cookies.login && cookies.login.username) {\n    return React.createElement(\"button\", {\n      id: \"disconnect\",\n      onClick: disconnect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"disconnect\");\n  }\n\n  return React.createElement(FormLogin, {\n    onSignin: onSignin,\n    onSignup: onSignup,\n    usernameRef: usernameRef,\n    passwordRef: passwordRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  });\n}\n\nfunction LocalProtectedRoute({\n  component: Component,\n  ...rest\n}) {\n  if (rest.allCookies && rest.allCookies.login && rest.allCookies.login.username && rest.allCookies.login.token) {\n    return React.createElement(Route, Object.assign({}, rest, {\n      render: routeProps => React.createElement(Component, Object.assign({}, routeProps, {\n        username: rest.allCookies.login.username,\n        token: rest.allCookies.login.token,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"!!\");\n}\n/**\n * @return {null}\n */\n\n\nfunction LocalProtectedLink({ ...rest\n}) {\n  if (rest.allCookies && rest.allCookies.login && rest.allCookies.login.username && rest.allCookies.login.token) {\n    return React.createElement(Link, {\n      className: rest.className,\n      to: rest.to,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"cities\");\n  } else {\n    return null;\n  }\n}\n\nconst ProtectedRoute = withCookies(LocalProtectedRoute);\nconst ProtectedLink = withCookies(LocalProtectedLink);\nexport { ProtectedRoute, ProtectedLink };\nexport default Login;","map":{"version":3,"sources":["/Users/camille/git/sailor/Sailor/app/front/src/Login.js"],"names":["React","axios","Route","Link","useCookies","withCookies","FormLogin","props","onSignin","usernameRef","passwordRef","onSignup","Login","cookies","setCookie","removeCookie","createRef","disconnect","user","username","current","value","password","p","post","status","token","data","err","console","error","e","preventDefault","target","login","LocalProtectedRoute","component","Component","rest","allCookies","routeProps","LocalProtectedLink","className","to","ProtectedRoute","ProtectedLink"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport {Route} from 'react-router-dom';\nimport {Link} from 'react-router-dom';\nimport {useCookies, withCookies} from 'react-cookie';\n\nfunction FormLogin(props) {\n    return (\n        <form onSubmit={props.onSignin}>\n            <div>\n                <label>Username:</label>\n                <input type=\"text\" id=\"username\" ref={props.usernameRef}/>\n            </div>\n            <div>\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" ref={props.passwordRef}/>\n            </div>\n            <div>\n                <button type=\"submit\" name=\"login\">Login</button>\n                <button type=\"button\" name=\"signup\" onClick={props.onSignup}>\n                    Sign up\n                </button>\n            </div>\n        </form>\n    );\n}\n\nfunction Login() {\n\n    const [cookies, setCookie, removeCookie] = useCookies(['login']);\n    const usernameRef = React.createRef();\n    const passwordRef = React.createRef();\n\n    function disconnect() {\n        removeCookie('login');\n    }\n\n    async function onSignup() {\n        const user = {\n            username: usernameRef.current.value,\n            password: passwordRef.current.value\n        };\n        try {\n            const p = (await axios.post('http://localhost:8000/signup', user));\n            if (p.status === 201) {\n                user.token = p.data.token;\n                setCookie('login', user, '/');\n            }\n        } catch (err) {\n            console.error(err)\n        }\n    }\n\n    async function onSignin(e) {\n        e.preventDefault();\n        const user = {\n            username: e.target.username.value,\n            password: e.target.password.value\n        };\n        try {\n            const p = (await axios.post('http://localhost:8000/signin', user));\n            if (p.status === 200) {\n                user.token = p.data.token;\n                setCookie('login', user, '/');\n            }\n        } catch (err) {\n            console.error(err)\n        }\n    }\n\n    if (cookies.login && cookies.login.username) {\n        return <button id=\"disconnect\" onClick={disconnect}>disconnect</button>;\n    }\n    return <FormLogin onSignin={onSignin} onSignup={onSignup} usernameRef={usernameRef} passwordRef={passwordRef}/>\n}\n\nfunction LocalProtectedRoute({component: Component, ...rest}) {\n    if (rest.allCookies && rest.allCookies.login && rest.allCookies.login.username && rest.allCookies.login.token) {\n        return (\n            <Route\n                {...rest}\n                render={routeProps => (\n                    <Component {...routeProps} username={rest.allCookies.login.username}\n                               token={rest.allCookies.login.token}/>\n                )}\n            />\n        );\n    }\n    return <p>!!</p>;\n}\n\n/**\n * @return {null}\n */\nfunction LocalProtectedLink({...rest}) {\n    if (rest.allCookies && rest.allCookies.login && rest.allCookies.login.username && rest.allCookies.login.token) {\n        return <Link className={rest.className} to={rest.to}>cities</Link>\n    }else{\n        return null;\n    }\n}\n\nconst ProtectedRoute = withCookies(LocalProtectedRoute);\nconst ProtectedLink = withCookies(LocalProtectedLink);\n\nexport {ProtectedRoute, ProtectedLink};\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}